import os, sys
apo = sys.argv[1]
apo_cleand = sys.argv[2]
with open(apo, 'r') as infile, open(apo_cleand, 'w') as outfile:
    for line in infile:
        if line.startswith(('ATOM', 'HETATM', 'END')):
            outfile.write(line)

with open(apo_cleand, 'r') as f:
    cont = f.readlines()


import numpy as np

SG_resid = []
SG_positions = []
for line in cont:
    if 'SG  CYS' in line:
        SG_resid.append(int(line[22:26]))
        SG_positions.append([float(line[30:38]), float(line[38:46]), float(line[46:54])])
SG_positions = np.array(SG_positions)
try:
    dS = np.where(np.sqrt(np.sum((SG_positions[:,:,None] - SG_positions[:,:,None].T)**2, axis=1))<3)
except:
    dS = ([0], [0])


resid_CYS2CYX = []

with open('prep_apo_antechamber.in', 'w') as f:
    f.write('## Autogenerated by prep-apo.py ##\n')
    f.write('source leaprc.protein.ff14SB #Source leaprc file for ff14SB protein force field\n')
    f.write('mol = loadpdb apo_continue_halfdS.pdb\n')
    for Si, Sj in zip(dS[0], dS[1]):
        if Si < Sj:  
            resid_CYS2CYX.append(SG_resid[Si])
            resid_CYS2CYX.append(SG_resid[Sj])
            f.write(f'bond mol.{SG_resid[Si]}.SG mol.{SG_resid[Sj]}.SG\n')
    f.write('savepdb mol apo_continue.pdb\n')
    f.write('saveamberparm mol apo_continue.prmtop apo_continue.inpcrd\n')
    f.write('quit\n')


new_cont = []
for line in cont:
    if 'END' in line:
        new_cont.append(line)
    elif int(line[22:26]) in resid_CYS2CYX and 'HG' in line:
        pass # Do nothing = delete this atom
    elif int(line[22:26]) in resid_CYS2CYX:
        new_cont.append(line[:17] + 'CYX' + line[20:])  # Change from CYS to CYX
    else:
        new_cont.append(line) # Just copy paste old content
with open(f'apo_continue_halfdS.pdb', 'w') as f:
    f.writelines(new_cont)
